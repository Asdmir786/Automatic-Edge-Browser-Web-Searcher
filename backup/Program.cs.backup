using OpenQA.Selenium;
using OpenQA.Selenium.Edge;
using System;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace Automatic_Edge_Browser_Web_Searcher;

class Program
{
    static void Main(string[] args)
    {
        // Load queries from external file
        var allQueries = File.ReadAllLines("queries.txt")
            .Select(q => q.Trim().Trim('"')) // Remove whitespace and quotes
            .Where(q => !string.IsNullOrWhiteSpace(q))
            .ToList();
        var uniqueQueries = allQueries.Distinct().ToList();
        Console.WriteLine($"Total queries (including duplicates): {allQueries.Count}");
        Console.WriteLine($"Unique queries: {uniqueQueries.Count}");
        // Optionally, print a few duplicates for review
        var duplicateGroups = allQueries.GroupBy(q => q).Where(g => g.Count() > 1).ToList();
        if (duplicateGroups.Count > 0)
        {
            Console.WriteLine($"Found {duplicateGroups.Count} duplicate queries. Example duplicates:");
            foreach (var group in duplicateGroups.Take(5))
                Console.WriteLine($"  '{group.Key}' appears {group.Count()} times");
        }
        else
        {
            Console.WriteLine("No duplicate queries found.");
        }
        // Ask user how many searches to perform
        int searchCount = 5;
        Console.Write("How many searches do you want to perform? (default 5): ");
        var input = Console.ReadLine();
        if (int.TryParse(input, out int userCount) && userCount > 0)
        {
            searchCount = userCount;
        }
        // Only use Selenium to launch Edge after user input
        var options = new EdgeOptions();
        using var driver = new EdgeDriver(options);
        var rand = new Random();
        for (int i = 0; i < searchCount; i++)
        {
            string query = uniqueQueries[rand.Next(uniqueQueries.Count)];
            driver.Navigate().GoToUrl("https://www.bing.com");
            Thread.Sleep(rand.Next(500, 1000)); // Wait for page to load
            // Use the correct selector for Bing's search bar (textarea with id 'sb_form_q')
            var searchBox = driver.FindElement(By.Id("sb_form_q"));
            searchBox.Clear();
            // Simulate human typing with random delays
            foreach (char c in query)
            {
                searchBox.SendKeys(c.ToString());
                Thread.Sleep(rand.Next(30, 100)); // Faster typing delay 0.03-0.1s
            }
            // Simulate a short pause before pressing Enter
            Thread.Sleep(rand.Next(200, 400));
            searchBox.SendKeys(Keys.Enter);
            Console.WriteLine($"Searched: {query}");
            Thread.Sleep(rand.Next(7000, 12000)); // Wait 7-12s before next search
        }
        driver.Quit();
    }
}
